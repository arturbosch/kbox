buildscript {
    ext {
        kbox_version = '0.4.0-SNAPSHOT'
        atrium_version = '0.6.0'
        kotlin_version = '1.2.21'
        mockito_kotlin_version = '1.5.0'
        dokka_version = '0.9.16'
        tutteli_plugins_version = '0.4.0'

        srcKotlin = 'src/main/kotlin'

        //publish.gradle
        bintray_version = '1.7.3'
        publish_artifactId = 'kbox'
        publish_version = kbox_version
        publish_description = 'A utility library for Kotlin'
        publish_vcsUrl = 'https://github.com/robstoll/kbox.git'
    }

    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "ch.tutteli:tutteli-gradle-spek:$tutteli_plugins_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'ch.tutteli.spek'

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    runtime "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "ch.tutteli:atrium-cc-en_UK-robstoll:$atrium_version"
    testCompile "ch.tutteli:atrium-spec:$atrium_version"
    testCompile ("com.nhaarman:mockito-kotlin:$mockito_kotlin_version"){
        exclude group: 'org.jetbrains.kotlin'
    }
}

def projectsWithSources = project
configure(projectsWithSources) {
    apply plugin: 'org.jetbrains.dokka'

    dokka {
        outputFormat = 'html'
        outputDirectory = "$buildDir/kdoc"
        linkMapping {
            dir = "$srcKotlin"
            url = "https://github.com/robstoll/${project.name}/tree/master/${project.name}/$srcKotlin"
            suffix = '#L'
        }

        sourceDirs = files()
    }

    task sourceJar(type: Jar) {
        from project.sourceSets.main.allSource
        classifier = 'sources'
    }

    task javadocJar(type: Jar, dependsOn: dokka) {
        from dokka.outputDirectory
        classifier = 'javadoc'
    }

    afterEvaluate {
        it.ext.publish_artifacts = [sourceJar, javadocJar]
        apply from: "${rootProject.projectDir}/gradle/scripts/publish.gradle"
    }
}

/*

Release & deploy a commit
--------------------------------
1. change kbox_version in build.gradle to X.Y.Z
2. update master:
    a) point to the tag
        1) search for `branch=master` and replace it with `tag=vX.Y.Z` (build status and coverage in README.md)
        2) search for `tree/master` and replace it with `tree/vX.Y.Z` (README.md)
    b) commit (modified build.gradle, README.md)
    c) git tag vX.Y.Z
    d) git push origin vX.Y.Z
4. deploy to bintray:
    a) gr bintrayUpload
    b) Log in to bintray, check and publish new jars
5. create release on github

Prepare next dev cycle
-----------------------
1. change version in build.gradle to X.Y.Z-SNAPSHOT
2. point to master
   a) search for `tag=vX.Y.Z` and replace it with `branch=master`
   b) search for `tree/vX.Y.Z` and replace it with `tree/master`
3. commit & push changes

*/

